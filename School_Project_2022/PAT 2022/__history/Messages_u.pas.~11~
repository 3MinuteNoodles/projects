unit Messages_u;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ComCtrls, Vcl.ExtCtrls;

type
  TfrmMessages = class(TForm)
    btnHome: TButton;
    btnHelp: TButton;
    pnlDisplay: TPanel;
    redConversation: TRichEdit;
    cmbUsers: TComboBox;
    lblSelect: TLabel;
    pnlMessage: TPanel;
    memMessage: TMemo;
    lblMessage: TLabel;
    btnSend: TButton;
    procedure FormShow(Sender: TObject);
    procedure cmbUsersChange(Sender: TObject);
    procedure btnSendClick(Sender: TObject);
    procedure btnHomeClick(Sender: TObject);
  private
    { Private declarations }
    iUser : integer;
    sUser : string;
  public
    { Public declarations }
  end;

var
  frmMessages: TfrmMessages;

implementation
Uses
 dmEducation_u, Login_u, StudentHome_u, TeacherHome_u;

{$R *.dfm}

procedure TfrmMessages.btnHomeClick(Sender: TObject);
var
 bFound : boolean;
begin
  frmMessages.hide;
  with dmEducation do
    begin
      tblUsers.open;
      tblUsers.first;
      while not(tblUsers.eof) and NOT(bFOund) do
        begin
          if tblUsers['UserID'] = frmLogin.iUserNumber then
            begin
              bFound := true;
            end
            else
            begin
              tblUsers.next;
            end;
        end;
                if tblUsers['IsTeacher'] then
            begin
              frmTeacherHOme.show;
            end
            else
            begin
              frmStudentHome.show;
            end;
      tblUsers.close;

    end;

end;

procedure TfrmMessages.btnSendClick(Sender: TObject);  //When the user sends a message
var
 sMessage : string;
begin
  if cmbUsers.itemindex < 0 then     //checks that there is a conversation selected in the combobox
    begin
      showmessage('Please select a conversation in the combobox above');
      cmbUsers.setfocus;
      Exit;
    end
  Else if memMessage.text = '' then //Checks that the user has entered a message to send
    begin
      showmessage('Please enter a message in the memo above');
      memmessage.setfocus;
      Exit;
    end;

  sMessage := memMessage.text;
  memMessage.lines.clear;

  //Inserts a new record into tblMessages that contains the new message and some info about it
  with dmEducation do
    begin
      tblMessages.open;
      tblMessages.last;
      tblMessages.insert;
      tblMessages['From'] := frmLogin.iUserNumber;
      tblMessages['To'] := iUser;
      tblMessages['Message'] := sMessage;
      tblMessages['Date'] := now;
      tblMessages.post;
      tblMessages.close;
    end;

    cmbUsersChange(btnSend);  //executes this because this will display all the messages(including the one that was just sent)
end;

procedure TfrmMessages.cmbUsersChange(Sender: TObject);
var
bFound : boolean;
begin
  //Gets the userID of the user who has been selected in the combo box
  iUser := strtoint(copy(cmbUsers.text, 1, pos('.', cmbUsers.text) - 1));

  with dmEducation do
    begin
      tblUsers.open;
      tblUsers.first;
      bFound := false;
      while not(tblUSers.eof) AND NOT(bFOund) do
        begin
          if tblUsers['UserID'] = iUser then
            begin
              sUser := tblUsers['UserName'] + ' ' + tblUsers['UserSurname'];//Gets the user name and surname of the user selected in cmbUsers
              bFound := true;
            end;
          tblUsers.next;
        end;
      tblUsers.close;

      redConversation.lines.clear;

      tblMessages.open;
      tblMessages.first;
      while not(tblMessages.eof) do
        begin
          if (tblMessages['From'] = frmLogin.iUserNumber) AND (tblMessages['To'] = iUser) then
            begin                    //For if the message is from you to the selected user
              redConversation.lines.add(#13 + 'YOU(' + datetimetostr(tblMessages['Date']) + '):');
              redConversation.lines.add(tblMessages['Message']);
            end
            else if (tblMessages['To'] = frmLogin.iUserNumber) AND (tblMessages['From'] = iUser) then
            begin                   //For if the message is from the selected user to you
              redConversation.lines.add(#13 + sUser + '(' + datetimetostr(tblMessages['Date']) + '):');
              redConversation.lines.add(tblMessages['Message']);
            end;
          tblMessages.next;
        end;
      tblMessages.close;

      if redConversation.text = '' then
        begin              //If no messages are displayed then shows this so the user knows what is happending
          redConversation.lines.add('There are currently no messages in this conversation' + #13 + 'Enter a message in the memo below to send one');
        end;
    end;


end;

procedure TfrmMessages.FormShow(Sender: TObject);
begin
  cmbUsers.Items.clear;
  redConversation.lines.clear;
  redConversation.readonly := true;
  memMessage.lines.clear;
  cmbUsers.style := csDropDownList; //makes it so the user can't edit the text in the combo box

  with dmEducation do
    begin
      tblusers.open;
      tblUsers.first;
      while not(tblUsers.eof) do
        begin
          if NOT(tblUsers['userID'] = frmLogin.iUserNumber) then
            begin           //If the user in tblUSers is not the one signed in then adds them to the combo box
              cmbUsers.items.add(inttostr(tblUsers['UserID']) + '. ' + tblUsers['UserName'] + ' ' + tblUsers['UserSurname']);
            end;
          tblUsers.next;
        end;
     tblUsers.close;
    end;
end;

end.
